syntax = "proto3";

service Inference {
  rpc CreateModelSession(CreateModelSessionRequest) returns (ModelSession) {}
  rpc CloseModelSession(ModelSession) returns (Empty) {}

  rpc CreateDatasetDescription(CreateDatasetDescriptionRequest) returns (DatasetDescription) {}

  rpc GetLogs(Empty) returns (stream LogEntry) {}

  rpc ListDevices(Empty) returns (Devices) {}

  rpc Predict(PredictRequest) returns (PredictResponse) {}
}

message Device {
  enum Status {
    AVAILABLE = 0;
    IN_USE = 1;
  }

  string id = 1;
  Status status = 2;
}

message CreateDatasetDescriptionRequest {
  string modelSessionId = 1;
  double mean = 3;
  double stddev = 4;
}

message DatasetDescription {
  string id = 1;
}

message Blob {
  string format = 1;
  bytes content = 2;
}

message CreateModelSessionRequest {
  oneof model {
    string model_uri = 1;
    Blob model_blob = 2;
  }

  repeated string deviceIds = 5;
}

message Shape {
    repeated NamedInt dims = 1;
}

message Scale {
   repeated NamedFloat scales = 1;
}


/* InputShape will always be expected to have `shape` set.
 * For `ShapeType` PARAMETRIZED, also a `stepShape` has to be given.
 * ref: https://github.com/bioimage-io/spec-bioimage-io/blob/gh-pages/model_spec_latest.md */
message InputShape {
  enum ShapeType {
    EXPLICIT = 0;
    PARAMETRIZED = 1;
  }

  ShapeType shapeType = 1;
  Shape shape = 2;
  Shape stepShape = 4;
}

message ModelSession {
  string id = 1;
  string name = 2;
  repeated string inputAxes = 3;
  repeated string outputAxes = 4;
  bool hasTraining = 5;
  repeated InputShape inputShapes = 6;
  repeated Shape halos = 7;
  repeated Scale scales = 8;
  repeated Shape offsets = 9;
}

message LogEntry {
  enum Level {
    NOTSET = 0;
    DEBUG = 1;
    INFO = 2;
    WARNING = 3;
    ERROR = 4;
    CRITICAL = 5;
  }

  uint32 timestamp = 1;
  Level level  = 2;
  string content = 3;
}

message Devices {
  repeated Device devices = 1;
}

message NamedInt {
    uint32 size = 1;
    string name = 2;
}

message NamedFloat {
    float size = 1;
    string name = 2;
}

message Tensor {
  bytes buffer = 1;
  string dtype = 2;
  repeated NamedInt shape = 3;
}

message PredictRequest {
  string modelSessionId = 1;
  string datasetId = 2;
  repeated Tensor tensors = 3;
}

message PredictResponse {
  repeated Tensor tensors = 1;
}

message Empty {}


service FlightControl {
  rpc Ping(Empty) returns (Empty) {}
  rpc Shutdown(Empty) returns (Empty) {}
}

message ModelInfo {
    repeated string deviceIds = 1;
}

message CreateModelSessionChunkedRequest {
  oneof data {
    ModelInfo info = 1;
    Blob chunk = 2;
  }
}
