syntax = "proto3";

package inference;

import "utils.proto";


service Inference {
  rpc CreateModelSession(CreateModelSessionRequest) returns (ModelSession) {}

  rpc CloseModelSession(ModelSession) returns (Empty) {}

  rpc CreateDatasetDescription(CreateDatasetDescriptionRequest) returns (DatasetDescription) {}

  rpc GetLogs(Empty) returns (stream LogEntry) {}

  rpc ListDevices(Empty) returns (Devices) {}

  rpc Predict(PredictRequest) returns (PredictResponse) {}
}


message CreateDatasetDescriptionRequest {
  ModelSession modelSessionId = 1;
  double mean = 3;
  double stddev = 4;
}

message DatasetDescription {
  string id = 1;
}

message Blob {
  string format = 1;
  bytes content = 2;
}

message CreateModelSessionRequest {
  oneof model {
    string model_uri = 1;
    Blob model_blob = 2;
  }

  repeated string deviceIds = 5;
}

message NamedInts {
    repeated NamedInt namedInts = 1;
}

message NamedFloats {
   repeated NamedFloat namedFloats = 1;
}



message LogEntry {
  enum Level {
    NOTSET = 0;
    DEBUG = 1;
    INFO = 2;
    WARNING = 3;
    ERROR = 4;
    CRITICAL = 5;
  }

  uint32 timestamp = 1;
  Level level  = 2;
  string content = 3;
}




service FlightControl {
  rpc Ping(Empty) returns (Empty) {}
  rpc Shutdown(Empty) returns (Empty) {}
}

