# TODO physical scale of the data
format_version: 0.3.0

name: UNet 2D Nuclei Broad
description: A 2d U-Net trained on the nuclei broad dataset.
authors:
  - Constantin Pape;@bioimage-io
  - Fynn Beuttenm√ºller

# we allow for multiple citations. Each citation contains TEXT, DOI and URL. One of DOI or URL needs to be given.
cite:
  - text: "Ronneberger, Olaf et al. U-net: Convolutional networks for biomedical image segmentation. MICCAI 2015."
    doi: https://doi.org/10.1007/978-3-319-24574-4_28
  - text: "2018 Data Science Bowl"
    url: https://www.kaggle.com/c/data-science-bowl-2018

git_repo: https://github.com/bioimage-io/pytorch-bioimage-io/tree/master/specs/models/unet2d
tags: [unet2d, pytorch, nucleus, segmentation, dsb2018]
license: MIT

documentation: UNet2DNucleiBroad.md
covers: []  # todo unet 2d arch image
attachments: {}
timestamp: 2019-12-11T12:22:32Z  # ISO 8601

inputs:
  - name: raw
    description: raw input
    axes: bcyx  # letters of axes in btczyx
    data_type: float32
    data_range: [-inf, inf]
    shape: [1, 1, 512, 512]
    preprocessing:  # list of preprocessing steps
      - name: zero_mean_unit_variance  # name of preprocessing step
        kwargs:
          mode: per_sample      # mode in [fixed, per_dataset, per_sample]
          axes: yx              # subset of axes to normalize jointly, batch ('b') is not a valid axis key here!
#      # example for zero_mean_unit_variance with mode 'fixed'
#      - name: zero_mean_unit_variance
#        kwargs:  # example kwargs for zero_mean_unit_variance
#          mode: fixed
#          axes: xy      # subset of axes to reduce
#          mean: [262.3] # mean if mode == fixed. An array as nested lists. Its shape equals the input shape without the reduced axes.
#          std: [220.2]  # standard deviation if mode == fixed analogously to mean

outputs:
  - name: probability
    description: probability in [0,1]
    axes: bcyx
    data_type: float32
    data_range: [-inf, inf]
    halo: [0, 0, 32, 32]
    shape:
      reference_input: raw
      scale: [1, 1, 1, 1]
      offset: [0, 0, 0, 0]

language: python
framework: pytorch
source: bioimageio.torch.models.unet2d.UNet2d
kwargs: {input_channels: 1, output_channels: 1}
dependencies: conda:../environment.yaml

test_inputs: [test_input.npy]
test_outputs: [test_output.npy]

sample_inputs: [sample_input.npy]
sample_outputs: [sample_output.npy]

weights:
  onnx:
    sha256: 6d180e39527789d8a17b39a6eb78405bdeb58c3e6c2cf8d5a2c6dcc3ac5dcc7f
    source: ./weights.onnx
